{"version":3,"sources":["../../../../assets/Scripts/assets/Scripts/LoadingSceneJS.js"],"names":["GameDataManager","require","define","cc","Class","extends","Component","properties","wxlog_btn","Button","loadingBar","type","ProgressBar","default","loadinglab","Label","titlebg","Sprite","audioControl","onLoad","progress","loadingTime","getInstance","preLoadingdata","loadres","log","getgold","savegold","money","self","jindu","is_loading","loader","onProgress","completedCount","totalCount","item","onLoadComplete","director","loadScene","start","preloadScene"],"mappings":";;;;;;AAAA,IAAIA,kBAAkBC,QAAQ,mBAAR,CAAtB;AACA,IAAIC,SAASD,QAAQ,QAAR,CAAb;AACAE,GAAGC,KAAH,CAAS;AACLC,aAASF,GAAGG,SADP;;AAGLC,gBAAY;AACRC,mBAAWL,GAAGM,MADN;AAER;AACAC,oBAAY;AACRC,kBAAMR,GAAGS,WADD;AAERC,qBAAS;AAFD,SAHJ;AAORC,oBAAYX,GAAGY,KAPP;AAQRC,iBAASb,GAAGc,MARJ;AASRC,sBACA;AACEL,qBAAS;AADX;AAVQ,KAHP;;AAkBLM,UAlBK,oBAkBI;AACL;AACA,aAAKT,UAAL,CAAgBU,QAAhB,GAA2B,CAA3B,CAFK,CAEwB;AAC7B,aAAKC,WAAL,GAAmB,CAAnB;AACArB,wBAAgBsB,WAAhB,GAA8BC,cAA9B,GAJK,CAI0C;AAC/C,aAAKC,OAAL;AACG;AACArB,WAAGsB,GAAH,CAAO,cAAP,EAAsBzB,gBAAgBsB,WAAhB,GAA8BI,OAA9B,EAAtB;AACA,YAAG,CAACxB,OAAOwB,OAAP,EAAJ,EAAqB;AACpB1B,4BAAgBsB,WAAhB,GAA8BK,QAA9B,CAAuCzB,OAAO0B,KAA9C;AACAzB,eAAGsB,GAAH,CAAO,KAAP,EAAazB,gBAAgBsB,WAAhB,GAA8BI,OAA9B,EAAb;AAAsD;AAC1D;AACGvB,WAAGsB,GAAH,CAAO,SAAP;AACP;AACA;AACI;AACJ;AACA;AACE;AACD,KArCI;;AAsCLD,aAAS,mBAAY;AACjB,YAAIK,OAAO,IAAX;AACA,YAAInB,aAAa,KAAKA,UAAtB;AACA;AACA;AACA,YAAIoB,QAAQ,CAAZ;AACAD,aAAKE,UAAL,GAAkB,IAAlB;AACA5B,WAAG6B,MAAH,CAAUC,UAAV,GAAuB,UAAUC,cAAV,EAA0BC,UAA1B,EAAsCC,IAAtC,EAA4C;AAC/D,gBAAID,eAAe,CAAf,IAAoBN,KAAKE,UAAL,KAAoB,IAA5C,EAAkD;AAC9CD,wBAAQI,iBAAiBC,UAAzB;AACH;AACDzB,uBAAWU,QAAX,GAAsBU,KAAtB;AACA;AACA;AACH,SAPD;AAQAD,aAAKQ,cAAL;AAEH,KAvDI;AAwDLA,kBAxDK,4BAwDY;AACblC,WAAGmC,QAAH,CAAYC,SAAZ,CAAsB,MAAtB;AACA;AACA;AACA;AACA;AACA;AACA;AACH,KAhEI;;;AAkEL;AACAC,SAnEK,mBAmEG;AACJrC,WAAGsB,GAAH,CAAO,eAAP;AACAtB,WAAGmC,QAAH,CAAYG,YAAZ,CAAyB,MAAzB,EAAiCtC,GAAGsB,GAAH,CAAO,SAAP,CAAjC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEH;AAjFI;;AAmFL;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AAxGJ","file":"LoadingSceneJS.js","sourceRoot":"../../../../assets/Scripts","sourcesContent":["var GameDataManager = require(\"GameDataManagerJS\");\nvar define = require(\"define\");\ncc.Class({\n    extends: cc.Component,\n\n    properties: {\n        wxlog_btn: cc.Button,\n        // bg_sprite: cc.Sprite,\n        loadingBar: {\n            type: cc.ProgressBar,\n            default: null\n        },\n        loadinglab: cc.Label,\n        titlebg: cc.Sprite,\n        audioControl:\n        {\n          default: null,\n        },\n    },\n\n    onLoad() {\n        // cc.sys.localStorage.clear();\n        this.loadingBar.progress = 0;//进度条\n        this.loadingTime = 1;\n        GameDataManager.getInstance().preLoadingdata();//加载关卡数据(获取maxPackageCount、passCount、unlockCount)\n        this.loadres();\n           //首次加载游戏\n           cc.log(\"############\",GameDataManager.getInstance().getgold())\n           if(!define.getgold()){\n            GameDataManager.getInstance().savegold(define.money);\n            cc.log(\"@@@\",GameDataManager.getInstance().getgold())}\n        //    }\n           cc.log(\"load123\")\n    // if(cc.sys.localStorage.getItem(\"first_in\") == NaN){\n    //     cc.sys.localStorage.setItem(\"first_in\", 100);\n        // 游戏首次加载需要初始化的操作\n    //   }\n    //   this.audioControl = cc.find('AudioControlNode').getComponent('AudioSourceControl');\n      // (\" 常驻节点 赋值 \")\n    },\n    loadres: function () {\n        var self = this;\n        var loadingBar = this.loadingBar;\n        // var loadtext = this.loadtext;\n        // var login_button = this.login_button;\n        var jindu = 0;\n        self.is_loading = true;\n        cc.loader.onProgress = function (completedCount, totalCount, item) {\n            if (totalCount !== 0 && self.is_loading === true) {\n                jindu = completedCount / totalCount;\n            }\n            loadingBar.progress = jindu;\n            // var number_jindu = parseInt(jindu * 100);\n            // loadtext.string = number_jindu + '%';\n        };\n        self.onLoadComplete();\n\n    },\n    onLoadComplete() {\n        cc.director.loadScene(\"main\");\n        // this.is_loading = false;\n        // // this.login_button.node.active = true;\n        // this.loadingBar.node.active = false;\n        // this.loadtext.node.active = false;\n        // cc.loader.onComplete = null;\n        //cc.vv.AudioAction.PlayBGM('bg_one.mp3');\n    },\n\n    //预加载、适配\n    start() {\n        cc.log(\"loading start\");\n        cc.director.preloadScene(\"main\", cc.log('预加载main'));\n        //适配\n        // console.log('    cc.winSize =' + cc.winSize);//以磅为单位返回WebGL视图的大小。它考虑了窗口的任何可能的旋转\n        // console.log('    cc.view.getVisibleSize() =' + cc.view.getVisibleSize());//返回正在运行的场景的可见大小\n        // console.log('    cc.view.getFrameSize() =' + cc.view.getFrameSize());//返回视图的帧大小。在本机平台上，它返回屏幕大小，因为视图是全屏视图。在Web上，它返回画布外部DOM元素的大小\n        // console.log('    cc.view.getDesignResolutionSize() =' + cc.view.getDesignResolutionSize());//返回视图的设计大小。默认分辨率大小与'getFrameSize'相同\n        // var DesignResolutionSize = cc.view.getDesignResolutionSize();\n        // var WinSize = cc.winSize;\n        // var nodeX = WinSize.width / DesignResolutionSize.width;\n        // var nodeY = WinSize.height / DesignResolutionSize.height;\n        // console.log('    nodeX=   ' + nodeX + '  nodeY=' + nodeY);\n\n    },\n\n    //进入main\n    // onEnterGame() {\n    //     console.log('loading onEnterGame!');\n    //     cc.director.loadScene(\"main\");\n    // },\n\n    // //加载完成回调main界面 \n    // _completeCallback: function (err, texture) {\n    //     console.log('第 ' + this.completeCount + '_completeCallback ');\n    //     this.onEnterGame();     //加载main界面 \n    // },\n    // update (dt) {\n    //     var progress = this.loadingBar.progress;\n    //     if(progress<1){\n    //         progress+=dt/this.loadingTime;\n    //     this.loadingBar.progress =  progress ;  }\n    //     else cc.director.loadScene(\"main\");\n    //     // this.scheduleOnce(function () {\n    //     //     this.onEnterGame();\n    //     // }, 0.1);\n\n    // },\n});"]}