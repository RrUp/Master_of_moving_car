{"version":3,"sources":["AudioSourceControl.js"],"names":["define","require","AudioSourceControl","cc","Class","extends","Component","properties","audio","type","AudioSource","default","audioClick","audioMove","audioComplete","data","statics","_instance","getInstance","console","log","onLoad","game","addPersistRootNode","node","start","playAudio","music","play","playClick","playMove","playComplete","module","exports"],"mappings":";;;;;;AAAA,IAAIA,SAASC,QAAQ,QAAR,CAAb;AACA,IAAIC,qBAAqBC,GAAGC,KAAH,CAAS;AAC9BC,aAASF,GAAGG,SADkB;;AAG9BC,gBAAY;;AAERC,eAAO;AACHC,kBAAMN,GAAGO,WADN;AAEHC,qBAAS;AAFN,SAFC;AAMRC,oBAAY;AACRH,kBAAMN,GAAGO,WADD;AAERC,qBAAS;AAFD,SANJ;;AAWRE,mBAAW;AACPJ,kBAAMN,GAAGO,WADF;AAEPC,qBAAS;AAFF,SAXH;;AAgBRG,uBAAe;AACXL,kBAAMN,GAAGO,WADE;AAEXC,qBAAS;AAFE,SAhBP;;AAqBRI,cAAM;;AArBE,KAHkB;AA2B9BC,aAAS;AACLC,mBAAW,IADN;AAELC,qBAAa,uBAAY;AACrB,gBAAIhB,mBAAmBe,SAAnB,KAAiC,IAArC,EAA2C;AACvC,qBAAKA,SAAL,GAAiB,IAAIf,kBAAJ,EAAjB;AACAiB,wBAAQC,GAAR,CAAY,sCAAZ;AACH;AACD,mBAAOlB,mBAAmBe,SAA1B;AACH;AARI,KA3BqB;;AAsC9BI,UAtC8B,oBAsCrB;AACLlB,WAAGmB,IAAH,CAAQC,kBAAR,CAA2B,KAAKC,IAAhC;AACAL,gBAAQC,GAAR,CAAY,6BAAZ;AACH,KAzC6B;AA2C9BK,SA3C8B,mBA2CtB,CAEP,CA7C6B;;AA8C9BC,eAAW,qBAAY;AACnB,YAAI,KAAKlB,KAAL,IAAYR,OAAO2B,KAAP,IAAc,IAA9B,EAAoC;AAChC,iBAAKnB,KAAL,CAAWoB,IAAX;AACH;AACJ,KAlD6B;AAmD9BC,eAAW,qBAAY;AACnB,YAAI,KAAKjB,UAAL,IAAiBZ,OAAO2B,KAAP,IAAc,IAAnC,EAAyC;AACrC,iBAAKf,UAAL,CAAgBgB,IAAhB;AACH;AACJ,KAvD6B;;AAyD9BE,cAAU,oBAAY;AAClB,YAAI,KAAKjB,SAAL,IAAgBb,OAAO2B,KAAP,IAAc,IAAlC,EAAwC;AACpC,iBAAKd,SAAL,CAAee,IAAf;AACH;AACJ,KA7D6B;;AA+D9BG,kBAAc,wBAAY;AACtB,YAAI,KAAKjB,aAAL,IAAoBd,OAAO2B,KAAP,IAAc,IAAtC,EAA4C;AACxC,iBAAKb,aAAL,CAAmBc,IAAnB;AACH;AACJ;AACD;AApE8B,CAAT,CAAzB;AAsEAI,OAAOC,OAAP,GAAiB/B,kBAAjB","file":"AudioSourceControl.js","sourceRoot":"../../../../assets/Scripts","sourcesContent":["var define = require(\"define\");\nvar AudioSourceControl = cc.Class({\n    extends: cc.Component,\n\n    properties: {\n\n        audio: {\n            type: cc.AudioSource,\n            default: null\n        },\n        audioClick: {\n            type: cc.AudioSource,\n            default: null\n        },\n\n        audioMove: {\n            type: cc.AudioSource,\n            default: null\n        },\n\n        audioComplete: {\n            type: cc.AudioSource,\n            default: null\n        },\n\n        data: 0,\n \n    },\n    statics: {\n        _instance: null,\n        getInstance: function () {\n            if (AudioSourceControl._instance === null) {\n                this._instance = new AudioSourceControl();\n                console.log('AudioSourceControl _instance=this  !');\n            }\n            return AudioSourceControl._instance;\n        }\n    },\n\n    onLoad() {\n        cc.game.addPersistRootNode(this.node);\n        console.log('AudioSourceControl onLoad  ');\n    },\n\n    start() {\n\n    },\n    playAudio: function () {\n        if (this.audio&&define.music==true) {\n            this.audio.play();\n        }\n    },\n    playClick: function () {\n        if (this.audioClick&&define.music==true) {\n            this.audioClick.play();\n        }\n    },\n\n    playMove: function () {\n        if (this.audioMove&&define.music==true) {\n            this.audioMove.play();\n        }\n    },\n\n    playComplete: function () {\n        if (this.audioComplete&&define.music==true) {\n            this.audioComplete.play();\n        }\n    },\n    // update (dt) {},\n});\nmodule.exports = AudioSourceControl;"]}